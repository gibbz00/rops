[package]
name = "rops"
description = "SOPS-like library in pure Rust"
categories = ["cryptography"]
version.workspace = true
license.workspace = true
authors.workspace = true
readme.workspace = true
repository.workspace = true
keywords.workspace = true
exclude.workspace = true
edition.workspace = true

[features]
default = ["age", "aws-kms", "yaml", "json", "toml", "aes-gcm", "sha2"]
# Integrations:
age = ["dep:age"]
aws-kms = ["dep:aws-arn", "dep:aws-sdk-kms", "dep:tokio"]
# File formats:
yaml = ["dep:serde_yaml"]
json = ["dep:serde_json"]
toml = ["dep:toml"]
# Ciphers
aes-gcm = ["dep:aes-gcm"]
# Hashers
sha2 = ["dep:sha2"]
# Test utils
test-utils = ["dep:pretty_assertions", "dep:indoc", "dep:textwrap"]

[dependencies]
anyhow.workspace = true
base64.workspace = true
chrono.workspace = true
derive_more.workspace = true
directories.workspace = true
generic-array.workspace = true
hex.workspace = true
impl-tools.workspace = true
indexmap = { workspace = true, features = ["serde"] }
rand.workspace = true
regex.workspace = true
serde.workspace = true
serde_with.workspace = true
serde_regex.workspace = true
strum.workspace = true
thiserror.workspace = true
zeroize.workspace = true

# AGE
age = { workspace = true, features = ["armor"], optional = true }

# AWS_KMS
aws-arn = { workspace = true, optional = true }
aws-sdk-kms = { workspace = true, optional = true }
tokio = { workspace = true, features = ["full"], optional = true }

# YAML
serde_yaml = { workspace = true, optional = true }

# JSON
serde_json = { workspace = true, features = ["preserve_order"], optional = true }

# TOML
toml = { workspace = true, features = ["preserve_order"], optional = true }

# AES_GCM
aes-gcm = { workspace = true, optional = true }

# SHA2
sha2 = { workspace = true, optional = true }

# TEST_UTILS
pretty_assertions = { workspace = true, optional = true }
textwrap = { workspace = true, optional = true }
indoc = { workspace = true, optional = true }

[dev-dependencies]
serial_test.workspace = true
tempfile.workspace = true

[build-dependencies]
anyhow.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
walkdir.workspace = true

# TEMP: https://github.com/rust-lang/rust/issues/43781
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
